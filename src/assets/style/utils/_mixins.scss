 
  @mixin placeholder($color) {
    &::-webkit-input-placeholder {
      color: $color;
    }
  
    &:-moz-placeholder {
      color: $color;
    }
  
    &::-moz-placeholder {
      color: $color;
    }
  
    &:-ms-input-placeholder {
      color: $color;
    }
  }
  
  
  @mixin box-shadow($top, $left, $blur, $distance, $rgba) {
    -webkit-box-shadow: $top $left $blur $distance $rgba;
    -moz-box-shadow: $top $left $blur $distance $rgba;
    box-shadow: $top $left $blur $distance $rgba;
  }
  
  /// Helper to create Keyframes on easy way
  @mixin keyframes($animationName) {
    @-webkit-keyframes #{$animationName} {
      @content;
    }
    @-moz-keyframes #{$animationName} {
      @content;
    }
    @-o-keyframes #{$animationName} {
      @content;
    }
    @keyframes #{$animationName} {
      @content;
    }
  }
  @mixin animate($name, $duration, $iteration, $direction, $delay) {
    -webkit-animation-duration: $duration;
    -moz-animation-duration: $duration;
    -o-animation-duration: $duration;
    animation-duration: $duration;
    -webkit-animation-iteration-count: $iteration;
    -moz-animation-iteration-count: $iteration;
    -o-animation-iteration-count: $iteration;
    animation-iteration-count: $iteration;
    -webkit-animation-name: $name;
    -moz-animation-name: $name;
    -o-animation-name: $name;
    animation-name: $name;
    -webkit-animation-direction: $direction;
    -moz-animation-direction: $direction;
    -o-animation-direction: $direction;
    animation-direction: $direction;
    -webkit-animation-delay: $delay;
    -moz-animation-delay: $delay;
    -o-animation-delay: $delay;
    animation-delay: $delay;
  }
  
  @mixin transform($transforms) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
  }
  
  @mixin scale($scale) {
    @include transform(scale($scale));
  }
  
  @mixin animation($timing, $animation) {
  }
  
  @mixin transition($transition...) {
    -moz-transition: $transition;
    -o-transition: $transition;
    -webkit-transition: $transition;
    transition: $transition;
  }
  @mixin transition-property($property...) {
    -moz-transition-property: $property;
    -o-transition-property: $property;
    -webkit-transition-property: $property;
    transition-property: $property;
  }
  @mixin transition-duration($duration...) {
    -moz-transition-property: $duration;
    -o-transition-property: $duration;
    -webkit-transition-property: $duration;
    transition-property: $duration;
  }
  @mixin transition-timing-function($timing...) {
    -moz-transition-timing-function: $timing;
    -o-transition-timing-function: $timing;
    -webkit-transition-timing-function: $timing;
    transition-timing-function: $timing;
  }
  @mixin transition-delay($delay...) {
    -moz-transition-delay: $delay;
    -o-transition-delay: $delay;
    -webkit-transition-delay: $delay;
    transition-delay: $delay;
  }
  
  @mixin respond-to($breakpoint) {
    @if $breakpoint == "device" {
      @media (min-width: 576px) {
        @content;
      }
    } @else if $breakpoint == "small" {
      // 767px
      @media (min-width: 767px) {
        @content;
      }
    } @else if $breakpoint == "medium" {
      @media (min-width: 992px) {
        @content;
      }
    } @else if $breakpoint == "large" {
      @media (min-width: 1200px) {
        @content;
      }
    }@else if $breakpoint == "extra-large" {
      @media (min-width: 1500px) {
        @content;
      }
    }
  }
  
  